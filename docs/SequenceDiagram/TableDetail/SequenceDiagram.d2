label.style.font-color: black

classes: {
  text-black: {
    style: {
      font-color: black
    }
  }

  return arrow: {
    style: {
      stroke-dash: 3
      stroke: black
      font-color: black
    }
  }

  frame: {
    style: {
      fill: '#EAEDF0'
      stroke-width: 1
    }
  }

  label right: {
    style.font-color: black
  }
}

shape: sequence_diagram

User: {
  shape: image
  width: 50
  height: 60
  icon: https://upload.wikimedia.org/wikipedia/commons/5/5b/Robustness_Diagram_Actor.svg
}

application: <<user interaction>> \n Oboms
apiGateway: <<coordinator>> \n apiGateway
shopManagementController: :ShopManagementController
shopManagementRepository: :ShopManagementRepository
shopManagementDAO: :ShopManagementDAO

DB: "DB" {
  shape: cylinder
}

User -> application.get: 1. User request get table detail
application.get -> apiGateway.get: 2. User request get table detail
apiGateway.get -> shopManagementController.get: 3. Request get table detail
shopManagementController.get -> shopManagementRepository.get: 4. getTableById()
shopManagementRepository.get -> shopManagementDAO.get: 5. getTableById()

alt: "alt" {
  class: frame
  If post id not exist: "[If table id not exist]" {
    class: frame
    shopManagementRepository.get <- shopManagementDAO.get: 6A.1 return 400 status {class: return arrow}
    shopManagementController.get <- shopManagementRepository.get: 6A.2 return 400 status {class: return arrow}
    apiGateway.get <- shopManagementController.get: 6A.3 return 400 status {class: return arrow}
    application.get <- apiGateway.get: 6A.4 return 400 status {class: return arrow}
    User <- application.get: 6A.5 Display error {class: return arrow}
  }
  If post id exist: "[If table id exist]" {
    class: frame
    shopManagementDAO.get -> DB.get: 6. Request database
    shopManagementDAO.get <- DB.get: 7. Database response {class: return arrow}
    shopManagementRepository.get <- shopManagementDAO.get: 8. return table data {class: return arrow}
    shopManagementController.get <- shopManagementRepository.get: 9. return table data {class: return arrow}
    apiGateway.get <- shopManagementController.get: 10. return 200 status {class: return arrow}
    application.get <- apiGateway.get: 11. return 200 status {class: return arrow}
    User <- application.get: 12. Display Table Detail {class: return arrow}
  }
}
