label.style.font-color: black

classes: {
  forward arrow: {
    style: {
      font-color: black
      bold: true
    }
  }

  return arrow: {
    style: {
      stroke-dash: 3
      stroke: black
      font-color: black
      bold: true
    }
  }

  frame: {
    style: {
      fill: '#EAEDF0'
      stroke-width: 1
      bold: true
    }
  }

  label right: {
    style.font-color: black
  }
}

shape: sequence_diagram

User: {
  shape: image
  width: 50
  height: 60
  icon: https://upload.wikimedia.org/wikipedia/commons/5/5b/Robustness_Diagram_Actor.svg
}

label: "Sequence Diagram for Update Shop"

WebAplication: Web Aplication
apiGateway: API Gateway
ShopController: :ShopController
ShopRepository: :ShopRepository
ShopDAO: :ShopDAO

Supabase: "Supabase" {
  shape: cylinder
}

DB: "DB" {
  shape: cylinder
}

User -> WebAplication.get: 1. User click\n "Update Shop" {class: forward arrow}
WebAplication.get -> apiGateway.get: 2. Request update\n shop details {class: forward arrow}
apiGateway.get -> ShopController.get: 3. Update Shop {class: forward arrow}
ShopController.get -> ShopRepository.get: 4. Forward to\n Repository {class: forward arrow}
ShopRepository.get -> ShopDAO.get: 5. Forward\n to DAO {class: forward arrow}
ShopDAO.get -> Supabase.get: 6. Validate\n shop details {class: forward arrow}
Supabase.get -> DB.get: 7. Update\n shop details in DB {class: forward arrow}
DB.get -> ShopDAO.get: 8. Return\n update status {class: return arrow}
ShopDAO.get -> ShopRepository.get: 9. Return\n update status {class: return arrow}
ShopRepository.get -> ShopController.get: 10. Return\n update status {class: return arrow}

alt: "alt" {
    If update success: "[Update shop successfully]" {
      class: frame
        ShopController.get -> apiGateway.get: 10.1. Send\n Response {class: return arrow}
        apiGateway.get -> WebAplication.get: 10.1.1. Forward\n response {class: return arrow}
        WebAplication.get -> User: 10.1.1.1. Display update\n shop succeed {class: return arrow}
    }
    If update fails: "[Invalid shop ID or permission denied]" {
      class: frame
        ShopController.get -> apiGateway.get: 10.2. Send\n Response {class: return arrow}
        apiGateway.get -> WebAplication.get: 10.2.1. Forward\n response {class: return arrow}
        WebAplication.get -> User: 10.2.1.1. Display update\n shop failed {class: return arrow}
    }
}
