label.style.font-color: black

classes: {
  text-black: {
    style: {
      font-color: black
    }
  },
  return arrow: {
    style: {
      stroke-dash: 3
    }
  },
  frame: {
    style: {
      fill: '#EAEDF0'
      stroke-width: 1
    }
  },
  label right: {
    style.font-color: black
  }
}

shape: sequence_diagram

User: {
  shape: image
  width: 50
  height: 60
  icon: https://upload.wikimedia.org/wikipedia/commons/5/5b/Robustness_Diagram_Actor.svg
}

application: Web application
apiGateway: ApiGateway
ReviewController: ReviewController
ReviewRepository: ReviewRepository
ReviewDAO: ReviewDAO
Cloudinary: "Cloudinary"
Supabase: "Supabase"

DB: "DB" {
  shape: cylinder
}

# User update review sequence
loop  { 
  class: frame
  User -> application.post: "1. Enter Update Review form"
  application.post -> application.post.get: "2. Check empty and valid input"    
  application.post -> User: "2.1. Show validation message" {class: return arrow}        
}  
 
application -> apiGateway.post: "3. Forward Update Review request"
apiGateway -> ReviewController.post: "4. Forward Update Review request"
ReviewController -> ReviewRepository.post: "5. Forward to repository"
ReviewRepository -> ReviewDAO.post: "6. Fetch existing review from DB"
ReviewDAO.post -> DB.get: "7. Retrieve existing review"
DB.get -> ReviewDAO.post: "8. Return review data" {class: return arrow}

alt: "alt" {
  class: frame
  If review exists: "[Review found]" {
    ReviewDAO.post -> ReviewRepository.post: "9. Validate user permission"
    ReviewRepository.post -> ReviewController.post: "10. Permission valid" {class: return arrow}
  }
  If review does not exist: "[Review not found]" {
    ReviewDAO.post -> ReviewRepository.post: "9.1. Return error"
    ReviewRepository.post -> ReviewController.post: "9.1.1. Forward error" {class: return arrow}
    ReviewController.post -> apiGateway.post: "9.1.2. Return error message" {class: return arrow}
    apiGateway.post -> application.post: "9.1.3. Forward error" {class: return arrow}
    application.post -> User: "9.1.4. Display error message" {class: return arrow}
  }
}

alt: "alt" {
  class: frame
  If media updated: "[Media needs update]" {
    ReviewController.post -> Cloudinary.post: "11. Upload new media"
    Cloudinary.post -> ReviewController.post: "12. Return media URL" {class: return arrow}
  }
}

ReviewController.post -> ReviewDAO.post: "13. Update review in DB"
ReviewDAO.post -> DB.update: "14. Save new review data"
DB.update -> ReviewDAO.post: "15. Return update status" {class: return arrow}
ReviewDAO.post -> ReviewRepository.post: "16. Forward update status" {class: return arrow}
ReviewRepository.post -> ReviewController.post: "17. Return result" {class: return arrow}

alt: "alt" {
  class: frame
  Update successful: "[Review updated successfully]" {
    ReviewController.post -> apiGateway.post: "18.1. Send success status" {class: return arrow}
    apiGateway.post -> application.post: "18.1.1. Return success status" {class: return arrow}
    application.post -> User: "18.1.1.1. Display update success message" {class: return arrow}
  }
  Update failed: "[Update failed]" { 
    ReviewController.post -> apiGateway.post: "18.2. Send error status" {class: return arrow}
    apiGateway.post -> application.post: "18.2.1. Return error status" {class: return arrow}
    application.post -> User: "18.2.1.1. Display update review error message" {class: return arrow}
  }
}
