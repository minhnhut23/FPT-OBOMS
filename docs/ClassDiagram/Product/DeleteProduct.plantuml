@startuml
hide circle
skinparam classAttributeIconSize 0

' Controller handling product endpoints
class ProductController {
    - _repo: IProductRepository
    + DeleteProduct(Guid id): Task<IActionResult>
}

' Repository interface with DeleteProduct declaration
interface IProductRepository {
    + DeleteProduct(Guid id): Task
}

' Repository implementation delegating to the DAO
class ProductRepository {
    - _dao: ProductDAO
    + DeleteProduct(Guid id): Task
}

' Data Access Object handling database operations
class ProductDAO {
    - _client: Client
    + DeleteProduct(Guid id): Task
}

' Domain model representing a product record
class MenuItem {
    + Id: Guid
    + ShopId: Guid
    + Name: string
    + Price: decimal
    + Description: string
    + Category: string
    + IsAvailable: bool
    + Ingredient: string
    + NutritionalIfo: string
    + CreatedAt: DateTime
    + UpdatedAt: DateTime
}

' Utility class for error handling
class ErrorHandler {
    + ProcessErrorMessage(string exceptionMessage): string
}

' Relationships among classes
ProductController -- IProductRepository
IProductRepository <|-- ProductRepository
ProductRepository -- ProductDAO
ProductDAO -- MenuItem
ProductDAO -- ErrorHandler

@enduml
