@startuml
hide circle
skinparam classAttributeIconSize 0

class TableController {
    - _tableRepository: ITableRepository
    + GetAllTables ([FromQuery] GetTableRequestDTO request): Task<IActionResult>
}

interface ITableRepository {
    + GetAllTables(GetTableRequestDTO request): Task<(List<GetTableResponseDTO> Tables, PaginationMetadataDTO PaginationMetadata)> 
}

class TableRepository {
    - _tableDao: TableDAO
    + GetAllTables(GetTableRequestDTO request): Task<(List<GetTableResponseDTO>, PaginationMetadataDTO)>
}
class TableDAO {
    - _client: Supabase.Client
    - _mapper: IMapper
    + GetAllTables(GetTableRequestDTO request): Task<(List<GetTableResponseDTO>, PaginationMetadataDTO)>
    + ApplyFilters(query, GetTableRequestDTO request): dynamic
}
class Table {
    + Id: Guid
    + TableNumber: string
    + Capacity: int
    + Status: string
    + Description: string
    + CreatedAt: DateTime
    + UpdatedAt: DateTime
    + ShopId: Guid
    + TypeId: Guid
}

class TableType {
    + Id: Guid
    + Name: string
    + Description: string
    + CreatedAt: DateTime
    + UpdatedAt: DateTime
}

TableDAO -- Table
TableDAO -- TableType
Table -- TableType : "TypeId"


class GetTableRequestDTO {
    + Status: string?
    + TableNumber: string?
    + MinCapacity: int?
    + MaxCapacity: int?
    + TypeId: Guid?
    + SortBy: string
    + SortOrder: string
    + PageNumber: int
    + PageSize: int
}


class GetTableResponseDTO {
    + Id: Guid
    + TableNumber: string
    + Capacity: int
    + Status: string
    + Description: string
    + CreatedAt: DateTime
    + UpdatedAt: DateTime
    + TableType: string
}
class PaginationMetadataDTO {
    + TotalResults: int
    + TotalPages: int
    + CurrentPage: int
    + PageSize: int
}
TableController -- ITableRepository
ITableRepository <|-- TableRepository
TableRepository -- TableDAO




TableDAO -- GetTableRequestDTO
TableDAO -- GetTableResponseDTO
TableDAO -- PaginationMetadataDTO


class ErrorHandler {
    + IsJson(string input): bool
    + ProcessErrorMessage(string exceptionMessage): string
}
class MappingProfile {
    + Table <-> GetTableResponseDTO
    + CreateTableRequestDTO -> Table
    + UpdateTableRequestDTO -> Table
    + CreateProductRequestDTO -> MenuItem
    + UpdateProductRequestDTO -> MenuItem
    + MenuItem -> GetProductResponseDTO
}

TableDAO -- MappingProfile
TableDAO -- ErrorHandler

@enduml